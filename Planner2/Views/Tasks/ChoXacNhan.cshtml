 @{ 
    var nguoidung = (Planner2.Models.User)Session[Planner2.Controllers.LoginAuth.NameSession];
}
<h2>
    Danh sách công việc chờ xác nhận
</h2>

<div id="grvListTast" style="width:100%;"></div>
<hr />
<h2>
    Danh sách công việc đã tiếp nhận nhưng chưa bắt đầu
</h2>

<div id="grvNotStart" style="width:100%;"></div>



<script>
    var grvListTast = $("#grvListTast").dxDataGrid({
        dataSource: [],
        selection: { mode: "single" },
        columnResizingMode: "widget",
        showBorders: true,
        paging: { enabled: true },
        filterRow: { visible: true, applyFilter: "auto" },
        showColumnHeaders: true,
        showColumnLines: true,
        showRowLines: true,
        pager: {
            showPageSizeSelector: true,
            allowedPageSizes: [100, 200, 500, 1000],
            showInfo: true
        },
        paging: { pageSize: 50 },
        allowColumnResizing: true,
        columnFixing: { enabled: true },
        hoverStateEnabled: true,
        headerFilter: { visible: true },
        columnsAutoWidth: true,
        allowColumnReordering: true,
        columns: [
            {
                dataField: "Id",
                visible: false
            },
            {
                dataField: "ParentID",
                visible: false,
                minWidth: 50
            },
            {
                dataField: "TaskName",
                minWidth: 100,
                width: 300,
                maxWidth: 500,
            },
            {
                dataField: "StartDate",
                caption: "Ngày bắt đầu",

                dataType: "date",
                format: "dd/MM/yyyy",
                allowHeaderFiltering: false,
                minWidth: 100,
            },
            {
                dataField: "DueDate",
                caption: "Thời hạn",
                dataType: "date",
                format: "dd/MM/yyyy",
                allowHeaderFiltering: false,
                minWidth: 100
            },
            {
                dataField: "Master",
                caption: "Người thực hiện",
                minWidth: 130,
            },
            {
                dataField: "TaskAssigner",
                caption: "Người giao việc",
                minWidth: 130,
            },
            {
                dataField: "TaskChecker",
                caption: "Người giám sát",
                minWidth: 130,
            },
            {
                dataField: "Authorized",
                caption: "Người ủy quyền",
                minWidth: 130,
            },

            {
                dataField: "Status",
                caption: "Tình trạng",
                minWidth: 120
            },

            {
                dataField: "Days",
                caption: "Số ngày báo trước",
                minWidth: 130
            },
            {
                dataField: "Priority",
                caption: "Mức độ ưu tiên",
                minWidth: 150
            }
        ],
        onCellPrepared: function (e) {
            if (e.rowType == "header") {
                e.cellElement.addClass('headerTree');
            }
        },
        scrolling: {
            scrollByContent: true
        },

        onContextMenuPreparing: function (e) {
            if (e.row.rowType == "data") {
                e.items = [
                    {
                        text: "Xem chi tiết",
                        icon: 'fa fa-info-circle',
                        useIcons: true,
                        onItemClick: function () {
                            GoLink('/Tasks/Info?ID=' + e.row.data.Id);
                        }
                    },
                    {
                        text: "Tiếp nhận",
                        icon: 'fa fa-info-circle',
                        useIcons: true,
                        onItemClick: function () {
                            var TaskID = e.row.data.Id;
                            var TT = 1;
                            var Noidung = "";
                            $.ajax({
                                type: "POST",
                                url: "/Tasks/XacNhan",
                                data: {
                                    TaskID: TaskID,
                                    TT: TT,
                                    Noidung: Noidung
                                },
                                dataType: "json",
                                success: function (response) {
                                    GoLink('/Tasks/ChoXacNhan');

                                }
                            });
                        }
                    },
                    {
                        text: "Từ chối",
                        icon: 'fa fa-info-circle',
                        useIcons: true,
                        onItemClick: function () {
                            var TaskID = e.row.data.Id;
                             var TT = 0;
                            var Noidung = "";
                            $.ajax({
                                type: "POST",
                                url: "/Tasks/XacNhan",
                                data: {
                                    TaskID: TaskID,
                                    TT: TT,
                                    Noidung: Noidung
                                },
                                dataType: "json",
                                success: function (response) {
                                    GoLink('/Tasks/ChoXacNhan');

                                }
                            });
                        }
                    }
                ]
            }
        }
    });
    var grvNotStart = $("#grvNotStart").dxDataGrid({
        dataSource: [],
        selection: { mode: "single" },
        columnResizingMode: "widget",
        showBorders: true,
        paging: { enabled: true },
        filterRow: { visible: true, applyFilter: "auto" },
        showColumnHeaders: true,
        showColumnLines: true,
        showRowLines: true,
        pager: {
            showPageSizeSelector: true,
            allowedPageSizes: [100, 200, 500, 1000],
            showInfo: true
        },
        paging: { pageSize: 50 },
        allowColumnResizing: true,
        columnFixing: { enabled: true },
        hoverStateEnabled: true,
        headerFilter: { visible: true },
        columnsAutoWidth: true,
        allowColumnReordering: true,
        columns: [
            {
                dataField: "Id",
                visible: false
            },
            {
                dataField: "ParentID",
                visible: false,
                minWidth: 50
            },
            {
                dataField: "TaskName",
                minWidth: 100,
                width: 300,
                maxWidth: 500,
            },
            {
                dataField: "StartDate",
                caption: "Ngày bắt đầu",

                dataType: "date",
                format: "dd/MM/yyyy",
                allowHeaderFiltering: false,
                minWidth: 100,
            },
            {
                dataField: "DueDate",
                caption: "Thời hạn",
                dataType: "date",
                format: "dd/MM/yyyy",
                allowHeaderFiltering: false,
                minWidth: 100
            },
            {
                dataField: "Master",
                caption: "Người thực hiện",
                minWidth: 130,
            },
            {
                dataField: "TaskAssigner",
                caption: "Người giao việc",
                minWidth: 130,
            },
            {
                dataField: "TaskChecker",
                caption: "Người giám sát",
                minWidth: 130,
            },
            {
                dataField: "Authorized",
                caption: "Người ủy quyền",
                minWidth: 130,
            },

            {
                dataField: "Status",
                caption: "Tình trạng",
                minWidth: 120
            },

            {
                dataField: "Days",
                caption: "Số ngày báo trước",
                minWidth: 130
            },
            {
                dataField: "Priority",
                caption: "Mức độ ưu tiên",
                minWidth: 150
            }
        ],
        onCellPrepared: function (e) {
            if (e.rowType == "header") {
                e.cellElement.addClass('headerTree');
            }
        },
        scrolling: {
            scrollByContent: true
        },
        onContextMenuPreparing: function (e) {
            if (e.row.rowType == "data") {
                e.items = [
                    {
                        text: "Xem chi tiết",
                        icon: 'fa fa-info-circle',
                        useIcons: true,
                        onItemClick: function () {
                            GoLink('/Tasks/Info?ID=' + e.row.data.Id);
                        }
                    } 
                ]
            }
        }
    });

    function FromJsonToDate(value) {
        if (value != null) {
            return new Date(parseInt(value.replace('/Date(', '')));
        }
        return;
    }
    var listTask = [];
    $(function () {
        $.ajax({
            url: '/Tasks/DATA_ChoXacNhan',
            type: 'POST',
            datatype: 'json',
            success: function (data) {
                listTask = [];
                $.each(data, function (i, item) {
                    var obj = {
                        Id: item.Id,
                        ParentID: item.ParentID,
                        TaskName: item.TaskName,
                        StartDate: FromJsonToDate(item.StartDate),
                        DueDate: FromJsonToDate(item.DueDate),
                        TaskAssigner: item.TaskAssigner,
                        TaskChecker: item.TaskChecker,
                        Authorized: item.Authorized,
                        Master: item.Master,
                        Status: item.Status,
                        Days: item.Days,
                        Priority: item.Priority,
                        AttendPerson: item.AttendPerson,

                    };
                    listTask.push(obj);
                });
                var arrgrvNotStart = listTask.filter(function (animal) {
                    return (
                        (animal.AttendPerson + "").includes('@nguoidung.UserName') == true
                    );
                });
                var arrgrvListTast = listTask.filter(function (animal) {
                    return (
                        (animal.AttendPerson+"").includes('@nguoidung.UserName') == false
                    );
                });
                console.log(arrgrvListTast);
                $("#grvListTast").dxDataGrid({
                    dataSource: arrgrvListTast
                });
                $("#grvNotStart").dxDataGrid({
                    dataSource: arrgrvNotStart
                });

            },
            error: function (data) {

                alert(data);
            }

        });
    })
</script>
